name: Make Recovery

on:
  workflow_dispatch:
    inputs:
      LIBRARY_NAME:
        description: 'LIBRARY_NAME'
        required: true
        default: 'omni'
      LIBRARY_URL:
        description: 'LIBRARY_URL'
        required: true
        default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni.git'
      LIBRARY_BRANCH:
        description: 'LIBRARY_BRANCH'
        required: true
        default: 'twrp-10.0'
      DEVICE_URL:
        description: 'DEVICE_URL'
        required: true
        default: 'https://github.com/Xpsoted/android_device_qualcomm_qrd855-TWRP'
      DEVICE_BRANCH:
        description: 'DEVICE_BRANCH'
        required: true
        default: 'android-10'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/qualcomm/msmnile'
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'msmnile'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-18.04
    
    steps:
    - name: Check Out
      uses: actions/checkout@main
      
    - name: Prepare the environment
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/sudo apt/sources.list.d
        sudo apt -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo apt -y autoremove --purge
        sudo apt -y autoclean
        sudo apt clean
        sudo apt update
        sudo apt -y install git-core gnupg flex bison gperf build-essential zip curl tree lib32z-dev unzip jq bc bison build-essential curl git gnupg gperf   zip zlib1g-dev imagemagick bash-completion python qemu-user-static
      
    - name: Set variables
      run: |
        echo "::set-output name=date::$(date +%F)"
      id: var
      
    - name: Install repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        export PATH=~/bin:$PATH
      
    - name: Initialize repo
      run: |
        PATH=~/bin:$PATH
        mkdir workspace
        cd workspace
        echo "::set-output name=pwd::$(pwd)"
        git config --global user.name "Hikaru's Action-Build-Bot"
        git config --global user.email "Android@teio.tk"
        repo init --depth=1 -u ${{ github.event.inputs.LIBRARY_URL }} -b ${{ github.event.inputs.LIBRARY_BRANCH }}
      id: pwd
          
    - name: Repo Sync
      run: |
        PATH=~/bin:$PATH
        
        cd workspace
        
        repo sync -j5 -c
        chmod 777 *
        ls -a
        rm -rf .repo
        
    - name: Building
      run: |
        PATH=~/bin:$PATH
        
        tar -zcvf 233.tar.gz workspace
        rm -rf workspace
        split -b 1999M 233.tar.gz "233.part"
        
        ls -a
          
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          233.partaa
          233.partab
          
          
        name: ${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: Recovery for ${{ github.event.inputs.DEVICE_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload to Releas
      uses: softprops/action-gh-release@v1
      with:
        files: |
          233.partac
          233.partad
          
          
        name: ${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}-1
        tag_name: ${{ github.run_id }}
        body: Recovery for ${{ github.event.inputs.DEVICE_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    - name: Upload to Releas
      uses: softprops/action-gh-release@v1
      with:
        files: |
          233.partae
          233.partaf
          
          
        name: ${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}-2
        tag_name: ${{ github.run_id }}
        body: Recovery for ${{ github.event.inputs.DEVICE_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
